# References:
# https://some-natalie.dev/blog/kaniko-in-arc/
# https://dev.to/ipo/using-kaniko-to-build-and-publish-container-image-with-github-action-on-github-self-hosted-runners-d5m

name: Image Build
on:
  workflow_dispatch:

env:
  FEDORA_VERSION: 41
  DRIVER_VERSION: 570.124.06
  KERNEL_TYPE: kernel
  OPEN_KERNEL_MODULES_ENABLED: false
  BASE_URL: https://us.download.nvidia.com/tesla

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: gcr.io/kaniko-project/executor:debug
    permissions:
      contents: read
      packages: write
    steps:
    - name: Set tag
      run: |
        TARGETARCH=$(arch)
        # BASE_URL=https://us.download.nvidia.com/XFree86/${TARGETARCH/x86_64/Linux-x86_64}
        TARGETARCH=${TARGETARCH/x86_64/amd64} && TARGETARCH=${TARGETARCH/aarch64/arm64}

        JQ_VERSION=$(wget -O - https://api.github.com/repos/jqlang/jq/releases/latest | grep tag_name | cut -d '"' -f 4 | tr -d 'v')
        wget -O jq https://github.com/jqlang/jq/releases/download/$JQ_VERSION/jq-linux-$TARGETARCH
        chmod +x jq

        echo TAG=$(wget -O - https://gitlab.com/api/v4/projects/container-toolkit-fcos%2Fdriver/repository/tags | ./jq -r '.[0] | .name') | tee -a "$GITHUB_ENV"
        echo TARGETARCH=$TARGETARCH | tee -a "$GITHUB_ENV"

    - name: Build and release container
      run: |
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF

        /kaniko/executor \
          --context-sub-path="fedora" \
          --dockerfile="./Dockerfile" \
          --context="git://gitlab.com/container-toolkit-fcos/driver.git#$TAG" \
          --destination="ghcr.io/${{ github.repository }}:v$DRIVER_VERSION-fedora$FEDORA_VERSION" \
          --build-arg TARGETARCH=$TARGETARCH \
          --build-arg FEDORA_VERSION=$FEDORA_VERSION \
          --build-arg BASE_URL=$BASE_URL \
          --build-arg DRIVER_VERSION=$DRIVER_VERSION \
          --build-arg KERNEL_TYPE=$KERNEL_TYPE \
          --push-retry 3