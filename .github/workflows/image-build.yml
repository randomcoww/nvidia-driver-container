# References:
# https://some-natalie.dev/blog/kaniko-in-arc/
# https://dev.to/ipo/using-kaniko-to-build-and-publish-container-image-with-github-action-on-github-self-hosted-runners-d5m

name: Image Build
on:
  push:
    tags:
    - "*"
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  FEDORA_VERSION: 42
  DRIVER_VERSION: ${{ github.head_ref || github.ref_name }}
  # BASE_URL: https://us.download.nvidia.com/tesla

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: ghcr.io/randomcoww/kaniko:debug
    permissions:
      contents: read
    steps:
    - name: Set tag
      run: |
        TARGETARCH=$(arch)
        echo BASE_URL=https://us.download.nvidia.com/XFree86/${TARGETARCH/x86_64/Linux-x86_64} | tee -a "$GITHUB_ENV"
        TARGETARCH=${TARGETARCH/x86_64/amd64} && TARGETARCH=${TARGETARCH/aarch64/arm64}

        GOLANG_VERSION=$(wget -O - https://api.github.com/repos/golang/go/git/refs/tags | jq -r 'last(.[] | select(.ref | startswith("refs/tags/go")) | select(.ref | contains("rc") | not)).ref' | tr -d "refs/tags/go")
        echo GOLANG_VERSION=$GOLANG_VERSION | tee -a "$GITHUB_ENV"

        echo TAG=$(wget -O - https://gitlab.com/api/v4/projects/container-toolkit-fcos%2Fdriver/repository/tags | jq -r 'first(.[] | select(.name | endswith("-fedora"))).name') | tee -a "$GITHUB_ENV"
        echo TARGETARCH=$TARGETARCH | tee -a "$GITHUB_ENV"

    - name: Build and release container
      run: |
        mkdir -p $DOCKER_CONFIG
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF
        echo -e "$INTERNAL_CA_CERT" > $DOCKER_CONFIG/internal.crt

        /kaniko/executor \
          --context-sub-path="fedora" \
          --dockerfile="./Dockerfile" \
          --context="git://gitlab.com/container-toolkit-fcos/driver.git#$TAG" \
          --destination="$INTERNAL_REGISTRY/${{ github.repository }}:v$DRIVER_VERSION-fedora$FEDORA_VERSION" \
          --registry-certificate=$INTERNAL_REGISTRY=$DOCKER_CONFIG/internal.crt \
          --build-arg TARGETARCH=$TARGETARCH \
          --build-arg GOLANG_VERSION=$GOLANG_VERSION \
          --build-arg FEDORA_VERSION=$FEDORA_VERSION \
          --build-arg DRIVER_VERSION=$DRIVER_VERSION \
          --build-arg BASE_URL=$BASE_URL \
          --push-retry 3
  cleanup:
    needs:
      - build
    env:
      TAGS_KEEP: 4
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/regclient/regctl:alpine
    steps:
    - name: Remove old tags
      run: |
        set -e
        regctl registry set $INTERNAL_REGISTRY --cacert "$INTERNAL_CA_CERT"
        tags=$(regctl tag ls $INTERNAL_REGISTRY/${{ github.repository }} | grep -v latest | sort -r)

        i=0
        for tag in $tags; do
          if [ "$i" -ge "$TAGS_KEEP" ]; then
            echo "Delete $tag"
            regctl tag delete --ignore-missing $INTERNAL_REGISTRY/${{ github.repository }}:$tag
          fi
          i=$((i + 1))
        done