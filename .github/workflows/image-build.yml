# References:
# https://some-natalie.dev/blog/kaniko-in-arc/
# https://dev.to/ipo/using-kaniko-to-build-and-publish-container-image-with-github-action-on-github-self-hosted-runners-d5m

name: Image Build
on:
  workflow_dispatch:
  push:
    tags:
    - "*"
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  FEDORA_VERSION: 42
  # https://gitlab.com/container-toolkit-fcos/driver/-/blob/fedora-rebased-main/ci/fedora/.gitlab-ci-fcos.yml
  GOLANG_VERSION: 1.24.5

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: registry.default/randomcoww/kaniko:latest
    permissions:
      contents: read
    steps:
    - name: Set tag
      run: |
        TARGETARCH=$(arch)
        echo BASE_URL=https://us.download.nvidia.com/XFree86/${TARGETARCH/x86_64/Linux-x86_64} | tee -a "$GITHUB_ENV"
        TARGETARCH=${TARGETARCH/x86_64/amd64} && TARGETARCH=${TARGETARCH/aarch64/arm64}
        echo BRANCH=$(wget -O - https://gitlab.com/api/v4/projects/container-toolkit-fcos%2Fdriver/repository/tags | jq -r 'first(.[] | select(.name | endswith("-fedora"))).name') | tee -a "$GITHUB_ENV"

        # Use last tag as build version
        # This allows rebuilding driver without committing a new tag
        echo DRIVER_VERSION=$(wget -O - https://api.github.com/repos/${{ github.repository }}/git/refs/tags | jq -r 'last(.[]).ref' | sed 's/refs\/tags\///') | tee -a "$GITHUB_ENV"
        echo TAG=$(date -u +'%Y%m%d.%H%M') | tee -a "$GITHUB_ENV"
        echo TARGETARCH=$TARGETARCH | tee -a "$GITHUB_ENV"

    - name: Build and release container
      run: |
        mkdir -p $DOCKER_CONFIG
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF
        echo -e "$INTERNAL_CA_CERT" > $DOCKER_CONFIG/internal.crt

        /kaniko/executor \
          --context-sub-path="fedora" \
          --dockerfile="./Dockerfile" \
          --context="git://gitlab.com/container-toolkit-fcos/driver.git#$BRANCH" \
          --destination="$INTERNAL_REGISTRY/${{ github.repository }}:v$DRIVER_VERSION.$TAG-fedora$FEDORA_VERSION" \
          --registry-certificate=$INTERNAL_REGISTRY=$DOCKER_CONFIG/internal.crt \
          --build-arg TARGETARCH=$TARGETARCH \
          --build-arg GOLANG_VERSION=$GOLANG_VERSION \
          --build-arg FEDORA_VERSION=$FEDORA_VERSION \
          --build-arg DRIVER_VERSION=$DRIVER_VERSION \
          --build-arg BASE_URL=$BASE_URL \
          --use-new-run \
          --skip-unused-stages \
          --snapshot-mode=redo \
          --cleanup \
          --image-download-retry=4 \
          --image-fs-extract-retry=4 \
          --push-retry=4
  cleanup:
    needs:
      - build
    env:
      TAGS_KEEP: 4
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/regclient/regctl:alpine
    steps:
    - name: Remove old tags
      run: |
        set -e
        regctl registry set $INTERNAL_REGISTRY --cacert "$INTERNAL_CA_CERT"
        i=0
        for tag in $(regctl tag ls $INTERNAL_REGISTRY/${{ github.repository }} --exclude latest | sort -r); do
          if [ "$i" -ge "$TAGS_KEEP" ]; then
            echo "Delete $tag"
            regctl tag delete --ignore-missing $INTERNAL_REGISTRY/${{ github.repository }}:$tag
          fi
          i=$((i + 1))
        done